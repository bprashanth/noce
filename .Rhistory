auto <- read.csv("/home/beeps/rtmp/external/eco/noce/islr/labs/3/data/auto.csv") 
auto = na.omit(auto)
auto[33,]
?unique_non_numerics
tauto=auto[33,]
tauto[0]
tauto[1]
tauto
as.numeric(tauto)
as.numeric(subset(tauto, -name))
as.numeric(subset(tauto, select=-name))
which(is.na(as.numeric(subset(tauto, select=-name))))
tauto[4]
data.frame(sapply(subset(auto, select=-name), function(x) as.numeric(x)))
tauto<-data.frame(sapply(subset(auto, select=-name), function(x) as.numeric(x)))
tauto[33,]
is.na(tauto)
which(is.na(tauto))
1224/8
33*8
which(is.na(tauto))
1224/9
na.omit(tauto)
na.omit(tauto)[33,]
auto_clean <- na.omit(subset(data.frame(sapply(auto, function(x) as.numeric(x))), select=-name))
lm.ols=lm(mpg~., data=auto_clean)
summary(lm.ols)
par(mfrow(2,2))
par(mfrow(c(2,2)))
par(mfrow=c(2,2))
plot(lm.ols)
plot(predict(lm.ols), rstudent(lm.fit))
plot(predict(lm.ols), rstudent(lm.fit))
?rstudent
plot(predict(lm.ols), rstudent(lm.ols))
plot(hatvalues(lm.ols))
which(hatvalues(lm.ols)
)
which.max(hatvalues(lm.ols))
auto[14,]
lm.ols[14]
lm.ols[14,]
predict(lm.ols, auto[14,])
auto[14,]
predict(lm.ols, subset(auto[14,], select=-name))
predict(lm.ols, subset(as.numeric(auto[14,]), select=-name))
as.numeric(subset(auto[14,], select=-name))
predict(lm.ols, as.numeric(subset(auto[14,], select=-name)))
auto[14,]
auto[15,]
auto[11,]
cooks.distance(lm.ols)
plot(cooks.distance(lm.ols))
plot(cooks.distance(lm.ols))
abline(h = 4*mean(cooksd, na.rm=T), col="red") 
plot(cooks.distance(lm.ols))
abline(h = 4*mean(cooksd, na.rm=T), col="red") 
par(mfrow=c(2,2))
plot(lm.ols)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  
cooksd <- cooks.distance(lm.ols)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  
abline(h = 4*mean(cooksd, na.rm=T), col="red") 
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  
head(auto)
lm.hp_wt<-lm(mpg ~ horsepower*weight, data = auto)
summary(lm.hp_wt)
lm.hp_wt <- lm(mpg~hosepower + weight + horsepower:weight, data=auto)
lm.hp_wt <- lm(mpg~horsepower + weight + horsepower:weight, data=auto)
summary(lm.hp_wt)
head(auto)
summary(lm(mpg~cylinders*horsepower, data=auto)
)
summary(lm(mpg~cylinders*weight, data=auto))
head(auto)
summary(lm(mpg~cylinders*horsepower, data=auto_clean))
summary(lm(mpg~weight*horsepower, data=auto_clean))
summary(lm(mpg~weight*cylinders, data=auto_clean))
summary(lm(mpg~weight, data=auto_clean))
summary(lm(mpg~., data=auto_clean))
summary(lm(mpg~acceleration*horsepower, data=auto_clean))
cor(auto_clean)
summary(lm(mpg~acceleration*cylinders+displacement*weight, data=auto_clean))
summary(lm(mpg~displacement*cylinders+displacement*weight, data=auto_clean))
head(auto)
auto[33,]
head(auto_clean)
auto_clean[33,]
plot(auto_clean)
plot(auto_clean)
?skewness
skewness
library(moments)
plot(auto_clean)
plot(auto)
?I
summary(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2))
)
summary(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2)))
summary(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2), data=auto))
summary(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2), data=auto_clean))
cor(auto_clean)
plot(auto)
summary(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2), data=auto_clean))
summary(lm(mpg~displacement*cylinders+displacement*weight, data=auto))
summary(lm.ols)
summary(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2), data=auto_clean))
summary(lm(log(mpg)~., data=auto_clean))
par(mfrow=c(2,2))
plot(lm(log(mpg)~., data=auto_clean))
par(mfrow=c(2,2))
plot(lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2), data=auto_clean))
Carseats
library(Carseats)
require(Carseats)
library(ISLR)
summary(carseats)
summary(Carseats)
lm.ols <- lm(sales~price+urban+us), data=carseats)
lm.ols <- lm(sales~price+urban+us), data=Carseats)
lm.ols <- lm(sales~price+urban+us, data=Carseats)
lm.ols <- lm(Sales~Price+Urban+Us, data=Carseats)
lm.ols <- lm(Sales~Price+Urban+US, data=Carseats)
summary(lm.ols)
summary(Carseats)
lm.ols_sig <- lm(Sales~Price+US, data=Carseats)
summary(lm.ols)
summary(lm.ols_sig)
conf(lm.ols_sig)
confint(lm.ols_sig)
cooksd <- cooks.distance(lm.ols_sig)
plot(cooksd, pch="*")
abline(4*(mean(cooksd)), col="red")
abline(4*mean(cooksd, na.rm=T), col="red")
abline(4*mean(cooksd, na.rm=T), col="red")
abline(4*mean(cooksd, na.rm=T), col="red")
mean(cooksd, na.rm=T)
abline(4*0.0024, col="red")
abline(4*0.0024)
cooksd <- cooks.distance(lm.ols_sig)
plot(cooksd, pch="*")
plot(cooksd, pch="*")
abline(h = 4*mean(cooksd, na.rm=T), col="red")
cooksd <- cooks.distance(lm.ols_sig)
plot(cooksd, pch="*")
abline(4*mean(cooksd, na.rm=T), col="red")
abline(h=4*mean(cooksd), col="red")
text(x=1:length(cooksd)+1, y=cooksd)
text(x=1:length(cooksd) + 1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T), names(cooksd), ""), col="red")
names(cooksd)
cooksd <- cooks.distance(lm.ols_sig)
plot(cooksd, pch="*")
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T), names(cooksd), ""), col="red")
abline(h=4*mean(cooksd), col="red")
plot(predict(lm.ols_sig, rstudent(lm.ols_sig)))
plot(predict(lm.ols_sig), rstudent(lm.ols_sig)))
plot(predict(lm.ols_sig), rstudent(lm.ols_sig))
set.seed(1)
x = rnorm(100)
y = 2*x + rnorm(100)
lm.ols = lm(y ~ x + 0)
summary(lm.ols)
lm.x_y = lm(x ~ y + o)
lm.x_y = lm(x ~ y + 0)
summary(lm.x_y)
summary(lm(y~x))
?sum
root
sqrt
sqrt(length(x) - 1)
sqrt(length(x) - 1) * sum(x) * sum(y)
(sqrt(length(x) - 1) * sum(x) * sum(y)) / (sqrt( sum( I(x^2) ) sum() ))
I(2^2)
lm.x_y
predict(lm.x_y)
?predict
sum(predict(lm.x_y) * predict(lm.y_x))^2
lm.y_x = lm(y ~ x + 0)
sum(predict(lm.x_y) * predict(lm.y_x))^2
(sqrt(length(x)-1) * sum(x*y)) / (sqrt(sum(x*x) * sum(y*y) - (sum(x*y))^2))
summary(lm(x ~ y))
summary(lm(y ~ x))
set.seed(1)
x = rnorm(100)
y = 2 * x + rnorm(100)
summary(lm(y~x+0))
summary(lm(x~y+0))
y = x + rnorm(100)

summary(lm(y~x+0))

summary(lm(x~y+0))

x = rnorm(100)
y = rnorm(100)
summary(lm(y~x+0))

summary(lm(x~y+0))

y = rnorm(100, mean=10, sd=0.1)
x = rnorm(100, mean=10, sd=0.1)
summary(lm(x~y+0))

summary(lm(y~x+0))

x = rnorm(100, mean=1000, sd=0.1)

y = rnorm(100, mean=1000, sd=0.1)

summary(lm(y~x+0))

summary(lm(x~y+0))

x = rnorm(100, mean=0, sd=1)

length(x)
x
eps = rnorm(100, mean=0, sd=0.25)

length(x+eps)
y = -1 + 0.5 * x + eps

length(y)
plot(x, y)

lm.y_fit = lm(y~x)

lm.y_fit = lm(y~x)

summary(lm.y_fit)
